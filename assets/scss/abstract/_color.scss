@use "color/blue" as _blue;
@use "color/red" as _red;
@use "color/yellow" as _yellow;
@use "color/green" as _green;
@use "color/gray" as _gray;
@use "color/gray_dark" as _gray_dark;
@use "color/orange" as _orange;
@use "color/pink_dark" as _pinkDark;

/* https://www.radix-ui.com/docs/colors/palette-composition/understanding-the-scale */

// Use Cases
// There are 12 steps in each scale. Each step was designed for at least one specific use case.
// This table is a simple overview of the most common use case for each step. However,
// there are many exceptions and caveats to factor in, which are covered in further detail below.

// Step            Use Case
//============================================================================
// 1               App background
// 2               Subtle background
// 3               UI element background
// 4               Hovered UI element background
// 5               Active / Selected UI element background
// 6               Subtle borders and separators
// 7               UI element border and focus rings
// 8               Hovered UI element border
// 9               Solid backgrounds
// 10              Hovered solid backgrounds
// 11              Low-contrast text
// 12              High-contrast text

// Steps 1–2: Backgrounds
//============================================================================
// Steps 1 and 2 are designed for app backgrounds and subtle component backgrounds.
// You can use them interchangeably, depending on the vibe you're going for.
//
// Appropriate applications include:
// * Main app background
// * Striped table background
// * Code block background
// * Card background
// * Sidebar background
// * Canvas area background
//
// You may want to use white for your app background in light mode,
// and Step 1 or 2 from a gray or coloured scale in dark mode.
// In this case, set up a mutable alias for AppBg and map it to a different color for each color mode.

// Steps 3–5: Component backgrounds
//============================================================================
// Steps 3, 4, and 5 are designed for UI component backgrounds.
// * Step 3 is for normal states.
// * Step 4 is for hover states.
// * Step 5 is for pressed or selected states.
//
// Even if your component has a transparent background in its default state,
// you should skip Step 3 and use Step 4 for its hover state.
//
// For call-to-action components that you want to draw particular attention to,
// you can bump each color one step higher to steps 4, 5, and 6.
//
// For complex components where you need many subtle colors to communicate different meanings,
// you can get creative and do something like:
// * Step 3 for hovered backgrounds.
// * Step 4 for selected / pressed backgrounds.
// * Step 5 for "unread" backgrounds.
// * Step 6 for hovered "unread" backgrounds.
//
// Steps 11 and 12—which are designed for text—are guaranteed to pass 4.5:1 contrast ratio
// on top of a step 3 background from the same scale.

// Steps 6–8: Borders
//============================================================================
// Steps 6, 7, and 8 are designed for borders.
// * Step 6 is designed for subtle borders on components which are not interactive.
//      For example sidebars, headers, cards, alerts, and separators.
// * Step 7 is designed for borders on interactive components, but can also be used for focus rings.
// * Step 8 is designed for borders on interactive components in their hover state.

// Steps 9–10: Solid backgrounds
//============================================================================
// Steps 9 and 10 are designed for solid backgrounds.
// Step 9 has the highest chroma of all steps in the scale.
// In other words, it's the purest step, the step mixed with the least amount of white or black.
// Because 9 is the purest step, it has a wide range of applications:
// * Website/App backgrounds
// * Website section backgrounds
// * Header backgrounds
// * Component backgrounds
// * Graphics/Logos
// * Overlays
// * Coloured shadows
// * Accent borders
//
// Step 10 is designed for component hover states, where step 9 is the component's normal state background.
// Most step 9 colors are designed for white foreground text. Sky, Mint, Lime, Yellow,
// and Amber are designed for black foreground text and steps 9 and 10.

// Steps 11–12: Text
//============================================================================
//Steps 11 and 12 are designed for text.
// * Step 11 is designed for low-contrast text.
// * Step 12 is designed for high-contrast text.

$black: _gray.$color-20;
$white: _gray.$color-0;

$gray-0: _gray.$color-0;
$gray-1: _gray.$color-0-5;
$gray-2: _gray.$color-1;
$gray-3: _gray.$color-8;
$gray-4: _gray.$color-13;
$gray-5: _gray.$color-17;
$gray-6: _gray.$color-20;

$background: $gray-0;
$background-hover: $gray-1;
$border: $gray-2;
$border-hover: $gray-3;
$text: $gray-4;
$text-hover: $gray-5;
$text-active: $gray-6;
$shapes: $border-hover;
$shapes-hover: $text;
$shapes-active: $text-hover;

$dark-background: $gray-6;
$dark-background-hover: $gray-5;
$dark-border: $gray-4;
$dark-border-hover: $gray-3;
$dark-text: $gray-2;
$dark-text-hover: $gray-1;
$dark-text-active: $gray-0;
$dark-shapes: $dark-border-hover;
$dark-shapes-hover: $dark-text;
$dark-shapes-active: $dark-text-hover;

// Accent
// Colors you can use to distinguish elements between them such as tags.
// For now there is X colors because we think it is enough
// and avoid too much confusions.
//============================================================================
$red: _red.$red11;
$red-light: _red.$red7;
$aubergine-dark: _pinkDark.$pink3;
$orange: _orange.$orange10;

// Semantics
// Colors that help identify status,
// see actions, locate help, and understand next steps.
//============================================================================
$alert: $red;
$success: _green.$green10;
$mark-color-background: _yellow.$yellow3;

// Neutrals & Overlays
// They are essential for a perfect visual interface.

// Please note that Neutrals and Overlays should be influenced
// by your Primary Color.

// This is why we can't provide Neutral and Overlay palettes
// As Neutrals have more usages in our interfaces,
// we will update the section with the right matrix and we are currently
// working on specific parameters to help you define them.
//============================================================================
$overlay: hsla(0, 0%, 0%, 0.565);
$shadow: hsla(0, 0%, 0%, 0.439);