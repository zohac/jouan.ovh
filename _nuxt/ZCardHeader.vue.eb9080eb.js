import{u as C,a as F,b as f}from"./_base.bf0c0234.js";import{b as k,e as r,v as w,C as A,L as I,i as c,R as P}from"./entry.eecb2418.js";const Z={...f,legacyFormat:{type:String,default:null},imgAttrs:{type:Object,default:null}},E=k({name:"NuxtPicture",props:Z,emits:["load"],setup:(t,o)=>{var g,d,p;const _=C(),u=F(t),y=r(()=>["png","webp","gif"].includes(i.value)),i=r(()=>P(t.src)),a=r(()=>t.format||i.value==="svg"?"svg":"webp"),v=r(()=>t.legacyFormat?t.legacyFormat:{webp:y.value?"png":"jpeg",svg:"png"}[a.value]||i.value),s=r(()=>a.value==="svg"?[{srcset:t.src}]:(v.value!==a.value?[v.value,a.value]:[a.value]).map(n=>{const{srcset:z,sizes:b,src:x}=_.getSizes(t.src,{...u.options.value,sizes:t.sizes||_.options.screens,modifiers:{...u.modifiers.value,format:n}});return{src:x,type:`image/${n}`,sizes:b,srcset:z}}));if(t.preload){const e=(g=s.value)!=null&&g[1]?1:0,n={rel:"preload",as:"image",imagesrcset:s.value[e].srcset};(p=(d=s.value)==null?void 0:d[e])!=null&&p.sizes&&(n.imagesizes=s.value[e].sizes),w({link:[n]})}const l={...t.imgAttrs,"data-nuxt-pic":""};for(const e in o.attrs)e in f&&!(e in l)&&(l[e]=o.attrs[e]);const m=A();return I(()=>{m.value.onload=e=>{o.emit("load",e)}}),()=>{var e;return c("picture",{key:s.value[0].src},[...(e=s.value)!=null&&e[1]?[c("source",{type:s.value[1].type,sizes:s.value[1].sizes,srcset:s.value[1].srcset})]:[],c("img",{ref:m,...u.attrs.value,...l,src:s.value[0].src,sizes:s.value[0].sizes,srcset:s.value[0].srcset})])}}});export{E as _};
